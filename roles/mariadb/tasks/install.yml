---
# equivalent to "mysql_secure_installation"

- name: mariadb | install mariadb-server
  apt: name={{ item }} state=latest
  with_items:
    - mariadb-client-5.5
    - mariadb-server-5.5
    - python-mysqldb
  tags: # for skip
    - mariadb

- name: mysql | install mysql-server-5.5
  apt: name={{ item }} state=latest
  with_items:
    - mysql-client-5.5
    - mysql-server-5.5
    - python-mysqldb
  tags: # for skip
    - mysql

- name: start service
  service: name=mysql
           state=started
           enabled=yes

- name: set the root password
  mysql_user: user=root password={{ mariadb_root_password }} host=localhost state=present

- name: config for easy access as root
  template: src=my.cnf.j2 dest=/root/.my.cnf mode=600

- name: config for easy access as {{ ansible_ssh_user }} user
  template: src=my.cnf.j2 dest=/home/{{ ansible_ssh_user }}/.my.cnf mode=600

- name: delete anonymous user for localhost
  mysql_user: user='' state=absent

- name: remove bind-address
  copy: src=mariadb_local.cnf.j2 dest=/etc/mysql/my.cnf mode=644
  when: not remote

- name: secure the root user
  mysql_user: user=root password={{ mariadb_root_password }} host={{ item }}
  with_items:
    - ::1
    - 127.0.0.1
    - localhost
    - "{{ ansible_hostname }}"

- name: grant all privilege to root with grant option
  mysql_user: user=root password={{ mariadb_root_password }} host=% priv={{ item }} append_privs=yes state=present
  with_items:
    - "*.*:ALL,GRANT"
  notify: restart mariadb-server

- name: remove the MySQL test database
  mysql_db: db=test state=absent
